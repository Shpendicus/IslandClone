Namespace Global.RemObjects.Elements.WebAssembly

  //this code has no meaning in any other language than Mercury, because it works on the Handles clauses (which are Mercury only) that are used in the code.

  Public Class WithEvents_HTMLElement
    Public readonly Property HtmlElement As HTMLElement

    Public Sub New(element As Element)
      _HtmlElement = DirectCast(element, HTMLElement)
    End Sub

    Public Sub New(element As Dynamic)
      _HtmlElement = DirectCast(element, HTMLElement)
    End Sub

     //performance: only wire the Html events that are handled in code, is called by the IntializeComponents code that is generated by the Html code generator
    Public Sub InitializeHtmlEvents
        if FullScreenChangeEvent IsNot Null Then
          SetEvent(HtmlElement, "onFullScreenChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent FullScreenChange(HtmlElement, ctype(e, Dom.Event)))
        End If
        if FullScreenErrorEvent IsNot Null Then
          SetEvent(HtmlElement, "onFullScreenError", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent FullScreenError(HtmlElement, ctype(e, Dom.Event)))
        End If
        if AbortEvent IsNot Null then
          SetEvent(HtmlElement, "onAbort", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Abort(HtmlElement, ctype(e, Dom.Event)))
        End If
        if LostFocusEvent IsNot Null then
          SetEvent(HtmlElement, "onBlur", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent LostFocus(HtmlElement, ctype(e, Dom.Event)))
        End If
        if ErrorEvent IsNot Null then
          SetEvent(HtmlElement, "onError", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent [Error](HtmlElement, ctype(e, UIEvent)))
        End If
        if FocusEvent IsNot Null then
          SetEvent(HtmlElement, "onFocus", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Focus(HtmlElement, ctype(e, FocusEvent)))
        End If
        if CancelEvent IsNot Null then
          SetEvent(HtmlElement, "onCancel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Cancel(HtmlElement, ctype(e, Dom.Event)))
        End If
        if CanplayEvent IsNot Null then
          SetEvent(HtmlElement, "onCanplay", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Canplay(HtmlElement, ctype(e, Dom.Event)))
        End If
        if CanplayThroughEvent IsNot Null then
          SetEvent(HtmlElement, "onCanplayThrough", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent CanplayThrough(HtmlElement, ctype(e, Dom.Event)))
        End If
        if ChangeEvent IsNot Null then
          SetEvent(HtmlElement, "onChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Change(HtmlElement, ctype(e, Dom.Event)))
        End If
        if ClickEvent IsNot Null then
          SetEvent(HtmlElement, "onClick", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Click(HtmlElement, ctype(e, MouseEvent)))
        End If
        if CloseEvent IsNot Null then
          SetEvent(HtmlElement, "onClose", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Close(HtmlElement, ctype(e, FocusEvent)))
        End If
        if ContextMenuEvent IsNot Null then
          SetEvent(HtmlElement, "onContextMenu", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent ContextMenu(HtmlElement, ctype(e, MouseEvent)))
        End If
        if CueChangeEvent IsNot Null then
          SetEvent(HtmlElement, "onCueChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent CueChange(HtmlElement, ctype(e, FocusEvent)))
        End If
        if DblClickEvent IsNot Null then
          SetEvent(HtmlElement, "onDblClick", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DblClick(HtmlElement, ctype(e, MouseEvent)))
        End If
        if DragEvent IsNot Null then
          SetEvent(HtmlElement, "onDrag", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Drag(HtmlElement, ctype(e, DragEvent)))
        End If
        if DragEndEvent IsNot Null then
          SetEvent(HtmlElement, "onDragEnd", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DragEnd(HtmlElement, ctype(e, DragEvent)))
        End If
        if DragEnterEvent IsNot Null Then
          SetEvent(HtmlElement, "onDragEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DragEnter(HtmlElement, ctype(e, DragEvent)))
        End If
        if DragExitEvent IsNot Null then
          SetEvent(HtmlElement, "onDragExit", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DragExit(HtmlElement, ctype(e, DragEvent)))
        End If
        if DragLeaveEvent IsNot Null then
          SetEvent(HtmlElement, "onDragLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DragLeave(HtmlElement, ctype(e, DragEvent)))
        End If
        if DragOverEvent IsNot Null then
          SetEvent(HtmlElement, "onDragOver", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DragOver(HtmlElement, ctype(e, DragEvent)))
        End If
        if DragStartEvent IsNot Null then
          SetEvent(HtmlElement, "onDragStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DragStart(HtmlElement, ctype(e, DragEvent)))
        End If
        if DropEvent IsNot Null then
          SetEvent(HtmlElement, "onDrop", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Drop(HtmlElement, ctype(e, DragEvent)))
        End If
        if DurationChangeEvent IsNot Null then
          SetEvent(HtmlElement, "onDurationChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent DurationChange(HtmlElement, ctype(e, Dom.Event)))
        End If
        if EmptiedEvent IsNot Null then
          SetEvent(HtmlElement, "onEmptied", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Emptied(HtmlElement, ctype(e, Dom.Event)))
        End If
        if EndedEvent IsNot Null then
          SetEvent(HtmlElement, "onEnded", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Ended(HtmlElement, ctype(e, Dom.Event)))
        End If
        if FormDataEvent IsNot Null then
          SetEvent(HtmlElement, "onFormData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent FormData(HtmlElement, ctype(e, Dom.Event)))
        End If
        if GotPointerCaptureEvent IsNot Null then
          SetEvent(HtmlElement, "onGotPointerCapture", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent GotPointerCapture(HtmlElement, ctype(e, PointerEvent)))
        End If
        if InputEvent IsNot Null then
          SetEvent(HtmlElement, "onInput", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Input(HtmlElement, ctype(e, Dom.Event)))
        End If
        if InvalidEvent IsNot Null then
          SetEvent(HtmlElement, "onInvalid", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Invalid(HtmlElement, ctype(e, Dom.Event)))
        End If
        if KeyDownEvent IsNot Null then
          SetEvent(HtmlElement, "onKeyDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent KeyDown(HtmlElement, ctype(e, KeyboardEvent)))
        End If
        if KeyPressEvent IsNot Null then
          SetEvent(HtmlElement, "onKeyPress", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent KeyPress(HtmlElement, ctype(e, KeyboardEvent)))
        End If
        if KeyUpEvent IsNot Null then
          SetEvent(HtmlElement, "onKeyUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent KeyUp(HtmlElement, ctype(e, KeyboardEvent)))
        End If
        if LoadEvent IsNot Null then
          SetEvent(HtmlElement, "onLoad", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Load(HtmlElement, ctype(e, Dom.Event)))
        End If
        if LoadedDataEvent IsNot Null then
          SetEvent(HtmlElement, "onLoadedData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent LoadedData(HtmlElement, ctype(e, Dom.Event)))
        End If
        if LoadedMetaDataEvent IsNot Null then
          SetEvent(HtmlElement, "onLoadedMetaData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent LoadedMetaData(HtmlElement, ctype(e, Dom.Event)))
        End If
        if LoadEndEvent IsNot Null then
          SetEvent(HtmlElement, "onLoadEnd", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent LoadEnd(HtmlElement, ctype(e, ProgressEvent)))
        End If
        if LoadStartEvent IsNot Null then
          SetEvent(HtmlElement, "onLoadStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent LoadStart(HtmlElement, ctype(e, ProgressEvent)))
        End If
        if LostPointerCaptureEvent IsNot Null then
          SetEvent(HtmlElement, "onLostPointerCapture", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent LostPointerCapture(HtmlElement, ctype(e, PointerEvent)))
        End If
        if MouseDownEvent IsNot Null then
          SetEvent(HtmlElement, "onMouseDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent MouseDown(HtmlElement, ctype(e, MouseEvent)))
        End If
        if MouseEnterEvent IsNot Null then
          SetEvent(HtmlElement, "onMouseEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent MouseEnter(HtmlElement, ctype(e, MouseEvent)))
        End If
        if MouseLeaveEvent IsNot Null then
          SetEvent(HtmlElement, "onMouseLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent MouseLeave(HtmlElement, ctype(e,MouseEvent )))
        End If
        if MouseMoveEvent IsNot Null then
          SetEvent(HtmlElement, "onMouseMove", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent MouseMove(HtmlElement, ctype(e, MouseEvent)))
        End If
        if MouseOutEvent IsNot Null then
          SetEvent(HtmlElement, "onMouseOut", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent MouseOut(HtmlElement, ctype(e, MouseEvent)))
        End If
        if WheelEvent IsNot Null then
          SetEvent(HtmlElement, "onWheel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Wheel(HtmlElement, ctype(e, WheelEvent)))
        End If
        if PauseEvent IsNot Null then
          SetEvent(HtmlElement, "onPause", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Pause(HtmlElement, ctype(e, Dom.Event)))
        End If
        if PlayEvent IsNot Null then
          SetEvent(HtmlElement, "onPlay", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Play(HtmlElement, ctype(e, Dom.Event)))
        End If
        if PlayingEvent IsNot Null then
          SetEvent(HtmlElement, "onPlaying", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Playing(HtmlElement, ctype(e, Dom.Event)))
        End If
        if PointerDownEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerDown(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerMoveEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerMove", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerMove(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerUpEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerUp(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerCancelEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerCancel(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerOverEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerOver", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerOver(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerOutEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerOut", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerOut(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerEnterEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerEnter(HtmlElement, ctype(e, PointerEvent)))
        End If
        if PointerLeaveEvent IsNot Null then
          SetEvent(HtmlElement, "onPointerLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent PointerLeave(HtmlElement, ctype(e, PointerEvent)))
        End If
        if ProgressEvent IsNot Null then
          SetEvent(HtmlElement, "onProgress", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Progress(HtmlElement, ctype(e, ProgressEvent)))
        End If
        if RateChangeEvent IsNot Null then
          SetEvent(HtmlElement, "onRateChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent RateChange(HtmlElement, ctype(e, Dom.Event)))
        End If
        if ResetEvent IsNot Null then
          SetEvent(HtmlElement, "onReset", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Reset(HtmlElement, ctype(e, Dom.Event)))
        End If
        if ResizeEvent IsNot Null then
          SetEvent(HtmlElement, "onResize", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Resize(HtmlElement, ctype(e, UIEvent)))
        End If
        if ScrollEvent IsNot Null then
          SetEvent(HtmlElement, "onScroll", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Scroll(HtmlElement, ctype(e, Dom.Event)))
        End If
        if SeekedEvent IsNot Null then
          SetEvent(HtmlElement, "onSeeked", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Seeked(HtmlElement, ctype(e, Dom.Event)))
        End If
        if SeekingEvent IsNot Null then
          SetEvent(HtmlElement, "onSeeking", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Seeking(HtmlElement, ctype(e, Dom.Event)))
        End If
        if SelectEvent IsNot Null then
          SetEvent(HtmlElement, "onSelect", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent [Select](HtmlElement, ctype(e, UIEvent)))
        End If
        if SelectStartEvent IsNot Null then
          SetEvent(HtmlElement, "onSelectStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent SelectStart(HtmlElement, ctype(e, Dom.Event)))
        End If
        if SelectionChangeEvent IsNot Null then
          SetEvent(HtmlElement, "onSelectionChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent SelectionChange(HtmlElement, ctype(e, Dom.Event)))
        End If
        if StalledEvent IsNot Null then
          SetEvent(HtmlElement, "onStalled", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Stalled(HtmlElement, ctype(e, Dom.Event)))
        End If
        if SubmitEvent IsNot Null then
          SetEvent(HtmlElement, "onSubmit", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Submit(HtmlElement, ctype(e, SubmitEvent)))
        End If
        if SuspendEvent IsNot Null then
          SetEvent(HtmlElement, "onSuspend", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Suspend(HtmlElement, ctype(e, Dom.Event)))
        End If
        if TimeUpdateEvent IsNot Null then
          SetEvent(HtmlElement, "onTimeUpdate", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent TimeUpdate(HtmlElement, ctype(e, Dom.Event)))
        End If
        if VolumeChangeEvent IsNot Null then
          SetEvent(HtmlElement, "onVolumeChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent VolumeChange(HtmlElement, ctype(e, Dom.Event)))
        End If
        if WaitingEvent IsNot Null then
          SetEvent(HtmlElement, "onWaiting", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent Waiting(HtmlElement, ctype(e, Dom.Event)))
        End If
    End Sub

    Public Event FullScreenChange(sender as HTMLElement, e As Dom.Event)
    Public Event FullScreenError(sender as HTMLElement, e As Dom.Event)
    Public Event Abort(sender as HTMLElement, e As Dom.Event)
    Public Event LostFocus(sender as HTMLElement, e As Dom.Event)
    Public Event [Error](sender as HTMLElement, e As UIEvent)
    Public Event Focus(sender as HTMLElement, e As FocusEvent)
    Public Event Cancel(sender as HTMLElement, e As Dom.Event)
    Public Event Canplay(sender as HTMLElement, e As Dom.Event)
    Public Event CanplayThrough(sender as HTMLElement, e As Dom.Event)
    Public Event Change(sender as HTMLElement, e As Dom.Event)
    Public Event Click(sender as HTMLElement, e As MouseEvent)
    Public Event Close(sender as HTMLElement, e As FocusEvent)
    Public Event ContextMenu(sender as HTMLElement, e As MouseEvent)
    Public Event CueChange(sender as HTMLElement, e As FocusEvent)
    Public Event DblClick(sender as HTMLElement, e As MouseEvent)
    Public Event Drag(sender as HTMLElement, e As DragEvent)
    Public Event DragEnd(sender as HTMLElement, e As DragEvent)
    Public Event DragEnter(sender as HTMLElement, e As DragEvent)
    Public Event DragExit(sender as HTMLElement, e As DragEvent)
    Public Event DragLeave(sender as HTMLElement, e As DragEvent)
    Public Event DragOver(sender as HTMLElement, e As DragEvent)
    Public Event DragStart(sender as HTMLElement, e As DragEvent)
    Public Event Drop(sender as HTMLElement, e As DragEvent)
    Public Event DurationChange(sender as HTMLElement, e As Dom.Event)
    Public Event Emptied(sender as HTMLElement, e As Dom.Event)
    Public Event Ended(sender as HTMLElement, e As Dom.Event)
    Public Event FormData(sender as HTMLElement, e As Dom.Event)
    Public Event GotPointerCapture(sender as HTMLElement, e As PointerEvent)
    Public Event Input(sender as HTMLElement, e As Dom.Event)
    Public Event Invalid(sender as HTMLElement, e As Dom.Event)
    Public Event KeyDown(sender as HTMLElement, e As KeyboardEvent)
    Public Event KeyPress(sender as HTMLElement, e As KeyboardEvent)
    Public Event KeyUp(sender as HTMLElement, e As KeyboardEvent)
    Public Event Load(sender as HTMLElement, e As Dom.Event)
    Public Event LoadedData(sender as HTMLElement, e As Dom.Event)
    Public Event LoadedMetaData(sender as HTMLElement, e As Dom.Event)
    Public Event LoadEnd(sender as HTMLElement, e As ProgressEvent)
    Public Event LoadStart(sender as HTMLElement, e As ProgressEvent)
    Public Event LostPointerCapture(sender as HTMLElement, e As PointerEvent)
    Public Event MouseDown(sender as HTMLElement, e As MouseEvent)
    Public Event MouseEnter(sender as HTMLElement, e As MouseEvent)
    Public Event MouseLeave(sender as HTMLElement, e As MouseEvent)
    Public Event MouseMove(sender as HTMLElement, e As MouseEvent)
    Public Event MouseOut(sender as HTMLElement, e As MouseEvent)
    Public Event Wheel(sender as HTMLElement, e As WheelEvent)
    Public Event Pause(sender as HTMLElement, e As Dom.Event)
    Public Event Play(sender as HTMLElement, e As Dom.Event)
    Public Event Playing(sender as HTMLElement, e As Dom.Event)
    Public Event PointerDown(sender as HTMLElement, e As PointerEvent)
    Public Event PointerMove(sender as HTMLElement, e As PointerEvent)
    Public Event PointerUp(sender as HTMLElement, e As PointerEvent)
    Public Event PointerCancel(sender as HTMLElement, e As PointerEvent)
    Public Event PointerOver(sender as HTMLElement, e As PointerEvent)
    Public Event PointerOut(sender as HTMLElement, e As PointerEvent)
    Public Event PointerEnter(sender as HTMLElement, e As PointerEvent)
    Public Event PointerLeave(sender as HTMLElement, e As PointerEvent)
    Public Event Progress(sender as HTMLElement, e As ProgressEvent)
    Public Event RateChange(sender as HTMLElement, e As Dom.Event)
    Public Event Reset(sender as HTMLElement, e As Dom.Event)
    Public Event Resize(sender as HTMLElement, e As UIEvent)
    Public Event Scroll(sender as HTMLElement, e As Dom.Event)
    Public Event Seeked(sender as HTMLElement, e As Dom.Event)
    Public Event Seeking(sender as HTMLElement, e As Dom.Event)
    Public Event [Select](sender as HTMLElement, e As UIEvent)
    Public Event SelectStart(sender as HTMLElement, e As Dom.Event)
    Public Event SelectionChange(sender as HTMLElement, e As Dom.Event)
    Public Event Stalled(sender as HTMLElement, e As Dom.Event)
    Public Event Submit(sender as HTMLElement, e As SubmitEvent)
    Public Event Suspend(sender as HTMLElement, e As Dom.Event)
    Public Event TimeUpdate(sender as HTMLElement, e As Dom.Event)
    Public Event VolumeChange(sender as HTMLElement, e As Dom.Event)
    Public Event Waiting(sender as HTMLElement, e As Dom.Event)

  End Class

  Public Class WithEvents_HTMLAnchorElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLAnchorElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAnchorElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLDListElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLDListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDListElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLHeadingElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLHeadingElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLHeadingElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLImageElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLImageElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLImageElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLAreaElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLAreaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAreaElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLAudioElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLAudioElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAudioElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLBRElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLBRElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLBRElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLBodyElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLBodyElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLBodyElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLButtonElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLButtonElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLButtonElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLCanvasElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLCanvasElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLCanvasElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLDataElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLDataElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDataElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLDataListElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLDataListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDataListElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLDetailsElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLDetailsElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDetailsElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLDivElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLDivElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDivElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLEmbedElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLEmbedElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLEmbedElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLFieldSetElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLFieldSetElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLFieldSetElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLFormElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLFormElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLFormElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLHRElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLHRElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLHRElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLIFrameElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLIFrameElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLIFrameElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLInputElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLInputElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLInputElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLLIElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLLIElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLIElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLLabelElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLLabelElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLabelElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLLegendElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLLegendElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLegendElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLLinkElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLLinkElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLinkElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLMapElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLMapElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMapElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLMediaElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLMediaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMediaElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLMetaElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLMetaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMetaElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLMeterElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLMeterElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMeterElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLModElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLModElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLModElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLOListElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLOListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOListElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLObjectElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLObjectElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLObjectElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLOptGroupElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLOptGroupElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOptGroupElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLOptionElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLOptionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOptionElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLOutputElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLOutputElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOutputElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLParagraphElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLParagraphElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLParagraphElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLParamElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLParamElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLParamElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLPreElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLPreElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLPreElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLProgressElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLProgressElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLProgressElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLQuoteElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLQuoteElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLQuoteElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLScriptElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLScriptElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLScriptElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLSelectElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLSelectElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSelectElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLSlotElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLSlotElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSlotElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLSourceElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLSourceElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSourceElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLSpanElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLSpanElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSpanElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLStyleElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLStyleElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLStyleElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTableCaptionElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTableCaptionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableCaptionElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTableCellElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTableCellElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableCellElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTableColElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTableColElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableColElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTableElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTableElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTableRowElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTableRowElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableRowElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTableSectionElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTableSectionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableSectionElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTemplateElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTemplateElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTemplateElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTextAreaElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTextAreaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTextAreaElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTimeElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlTimeElement As HTMLElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTimeElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTitleElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTitleElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTitleElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLTrackElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLTrackElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTrackElement)
      End Get
    End property
  End Class

  Public Class WithEvents_HTMLVideoElement
    Inherits WithEvents_HTMLElement

    Public shadows readonly Property HtmlElement As HTMLVideoElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLVideoElement)
      End Get
    End property
  End Class

End Namespace